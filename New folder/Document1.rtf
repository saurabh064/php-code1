{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang16393\deflangfe16393{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mnaryLim0\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\nowidctlpar\sa200\sl276\slmult1\f0\fs32\lang9 1\fs22 . \b\fs32 Introduction\b0\fs22\par
\par
\fs24 1.1 \b Project Introduction:\b0\fs22\par
Welcome to the world of cutting-edge e-commerce innovation with GenAI Solutions! This project is a testament to our commitment to leveraging artificial intelligence to create a secure, efficient, and user-friendly e-commerce platform that adheres to the highest industry standards.\par

\pard 
{\pntext\f0 a.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pnlcltr{\pntxta.}}
\nowidctlpar\fi-360\li720\sa200\sl276\slmult1\b Project Background\b0\par

\pard\nowidctlpar\sa200\sl276\slmult1 In today's digital era, e-commerce has become an integral part of our daily lives. Consumers seek convenience, variety, and security when shopping online. The challenge is to provide an intuitive and secure online shopping experience that meets these demands. To tackle this challenge, we have embarked on a journey to harness the power of GenAI Solutions\emdash a class of AI models, including ChatGPT, Bard, and AWS Code Whisper, to build an innovative and robust e-commerce platform.\par
\lang16393         b. \b\lang9 GenAI-Powered E-Commerce\b0\par
Our project revolves around the development of an e-commerce platform that capitalizes on GenAI Solutions. These AI models enable us to create a platform that is not only intelligent but also secure and dynamic. By incorporating AI-driven features, we aim to enhance the user experience, streamline operations, and ensure the utmost security for our users.\par
\lang16393         c. \b\lang9 Key Objectives\par
\b0 Our primary objectives for this project include:\par
Seamless User Experience: We aspire to create a platform that offers a seamless, user-friendly shopping experience. Through AI-driven recommendations, intelligent search, and personalized interactions, we aim to make online shopping more enjoyable.\par
Security First: Security is paramount in e-commerce. We prioritize implementing industry best practices and AI-driven security measures to protect user data, transactions, and privacy.\par
Efficiency and Automation: By harnessing the power of AI, we intend to automate various aspects of our platform, from inventory management to customer support, to make the shopping process more efficient for both users and administrators.\par
Adaptability: Our e-commerce platform will be designed to adapt and evolve based on user behavior and feedback. AI models will play a pivotal role in ensuring that the platform continuously improves and stays up-to-date with market trends.\par
\lang16393       d\lang9 . \b Industry Best Practices\par
\b0 We are committed to adhering to industry best practices throughout the development and deployment of our e-commerce platform. This includes complying with relevant regulations, ensuring data privacy, and adopting sustainable practices where possible.\par
Briefly introduce the project and its purpose.\par
Mention the importance and relevance of the project in the e-commerce industry.\par
\par
\fs28 1.2 \b E-commerce Platform Introduction:\b0\fs22\par
Nykii is more than just an e-commerce platform; it's your gateway to a world of beauty and skincare excellence. At Nykii, we have meticulously curated a wide range of beauty and skincare products, spanning multiple renowned brands, all within a secure, user-friendly digital environment. Our mission is to provide you with authentic, high-quality products that cater to your unique beauty needs while offering them at competitive, discounted prices. Whether you're a teenager just beginning your skincare journey or someone looking to maintain radiant skin through the years, Nykii has something for everyone.\par
\b Key Features of Nykii\par
\b0             a. \b A Treasure Trove of Beauty and Skincare Brands\par
\b0 Nykii boasts an extensive collection of beauty and skincare brands, each handpicked to ensure product authenticity and quality. From internationally recognized names to niche labels, our platform hosts a wide spectrum of choices to suit your preferences.\par
           b\b . Unparalleled Variety\par
\b0 We understand that beauty knows no age limits. Nykii embraces this diversity, offering products that cater to individuals of all age groups. Whether you're a youthful enthusiast exploring the latest trends or someone seeking age-defying skincare solutions, our platform is your go-to destination.\par
          \b c. Authenticity Assurance\par
\b0 One of Nykii's top priorities is delivering authentic products to our customers. We have stringent quality checks in place to ensure that every product you purchase meets the highest industry standards, leaving you with nothing but confidence in your choices.\par
          d. \b Competitive Pricing\par
\b0 We believe that everyone deserves access to top-tier beauty and skincare products without breaking the bank. Nykii's pricing strategy is designed to provide you with exceptional value for your money, often at discounted rates compared to traditional retail.\par
         e. \b User-Centric Experience\par
\b0 Navigating Nykii's platform is a breeze. Our user-friendly interface makes it easy to explore products, read reviews, and make informed choices. We're dedicated to providing a smooth, hassle-free shopping experience that keeps you coming back for more.2. Design of the Project\par
\par
2.1 \b\fs24 Design Overview:\b0\fs22\par
The Nykii e-commerce platform is meticulously designed to provide an intuitive and secure shopping experience for users interested in beauty and skincare products. It is composed of several key sections, each serving a specific purpose and seamlessly interconnected to ensure a user-centric and efficient journey. Below, we outline the main sections and features of the platform:\par
\tab a. \b Home Page (Product Page):\par
\b0 The landing page of Nykii, where users can explore a vast array of beauty and skincare products.\par
Product listings include product images, brief descriptions, and prices.\par
Users can browse, search, and filter products based on various criteria such as brand, type, and price.\par
Each product listing includes an "Add to Cart" button to allow users to add products to their shopping cart.\par
\tab b. \b Login Page:\par
\b0 Users can access their accounts by entering their registered email and password.\par
Security features include a "Forgot Password" button, which allows users to reset their password through a security question and answer.\par
The login page serves as the gateway to user-specific functionalities, including order history and saved preferences.\par
\tab c. \b Registration Page (OTP Secured):\par
\b0 New users can sign up for Nykii by providing essential information, including email, password, first name, last name, phone number, and address.\par
To enhance security, the registration process is protected by a one-time password (OTP) verification mechanism.\par
After submitting their details, users receive an OTP via email to verify their identity.\par
Only upon successfully entering the OTP can users complete their registration.\par
\tab d. \b Cart Feature:\par
\b0 Users can add products to their shopping cart from the product listings without leaving the current page, thanks to asynchronous (AJAX) interactions.\par
The shopping cart displays a summary of added items, including product names, quantities, individual prices, and subtotals.\par
Users can adjust quantities, remove items, or proceed to the payment page.\par
The cart provides a clear overview of the order before checkout.\par
\tab e. \b Payment Page:\par
\b0 The payment page allows users to securely enter their credit card details, CVV, and OTP for order confirmation.\par
It calculates the total order amount based on the items in the cart, including individual subtotals.\par
Upon successful payment, the platform records the transaction in the Payment Transactions table, ensuring transparency and security.\par
Users receive payment confirmation and order details via email after completing their purchase.\par
\par
2.2 \b Database Design Overview:\par
\b0 The Nykii e-commerce platform employs a well-structured relational database to efficiently manage user data, product information, orders, payments, and security features. Below, we outline the design of the key database tables:\par

\pard\nowidctlpar\sl276\slmult1\tab a. \b Users Table:\par
\b0 user_id (Primary Key)\par
email (Unique)\par
password_hash\par
first_name\par
last_name\par
phone_number\par
address\par
registration_date\par
\par
\tab b. \b Orders Table:\par
\b0 order_id (Primary Key)\par
user_id (Foreign Key referencing Users)\par
order_date\par
total_amount\par
\par
\tab c. \b OrderDetails Table:\par
\b0 order_detail_id (Primary Key)\par
order_id (Foreign Key referencing Orders)\par
product_id (Foreign Key referencing Products)\par
quantity\par
subtotal_amount\par
\par
\tab d. \b Carts Table:\par
\b0 cart_id (Primary Key)\par
user_id (Foreign Key referencing Users)\par
product_id (Foreign Key referencing Products)\par
quantity\par
date_added\par
\par
\tab e. \b Products Table:\par
\b0 product_id (Primary Key)\par
product_name\par
description\par
price\par
image\par
brand\par
category\par
\par
\tab f. \b PaymentTransactions Table:\par
\b0 transaction_id (Primary Key)\par
order_id (Foreign Key referencing Orders)\par
payment_date\par
payment_amount\par
payment_status\par
payment_method\par
\par
\tab g. \b OtpVerification Table:\par
\b0 otp_id (Primary Key)\par
user_id (Foreign Key referencing Users)\par
otp_code\par
expiration_timestamp\par
\par
\tab h. \b SecurityQuestions Table:\par
\b0 question_id (Primary Key)\par
question_text\par

\pard\nowidctlpar\sa200\sl276\slmult1\par
\b Relationships:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\nowidctlpar\fi-360\li720\b0 Users can have multiple orders (One-to-Many relationship with Orders).\par
{\pntext\f1\'B7\tab}Each order can have multiple order details (One-to-Many relationship with OrderDetails).\par
{\pntext\f1\'B7\tab}Users can have multiple items in their cart (One-to-Many relationship with Carts).\par
{\pntext\f1\'B7\tab}Products in the cart and order details reference the Products table (Foreign Key relationships).\par
{\pntext\f1\'B7\tab}Each user can have multiple OTP verifications for registration (One-to-Many relationship with OtpVerification).\par

\pard\nowidctlpar\sa200\sl276\slmult1\par
2.4 Database Scripts\par

\pard\nowidctlpar\sl276\slmult1\b Users Table\b0\par
CREATE TABLE Users (\par
    user_id INT AUTO_INCREMENT PRIMARY KEY,\par
    username VARCHAR(255) NOT NULL UNIQUE,\par
    password_hash VARCHAR(255) NOT NULL,\par
    first_name VARCHAR(255) NOT NULL,\par
    last_name VARCHAR(255) NOT NULL,\par
    phone_number VARCHAR(15),\par
    address VARCHAR(255),\par
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP\par
);\par
\par
\b OtpVerification  table\b0\par
CREATE TABLE OtpVerification (\par
    otp_id INT AUTO_INCREMENT PRIMARY KEY,\par
    user_id INT NOT NULL,\par
    otp_code VARCHAR(6) NOT NULL,\par
    expiration_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP + INTERVAL 5 MINUTE,\par
    FOREIGN KEY (user_id) REFERENCES Users(user_id)\par
);\par
\par
\b Products table\b0\par
CREATE TABLE Products (\par
    product_id INT AUTO_INCREMENT PRIMARY KEY,\par
    product_name VARCHAR(255) NOT NULL,\par
    description TEXT,\par
    price DECIMAL(10, 2) NOT NULL,\par
    image_url VARCHAR(255),\par
    UNIQUE KEY (product_name)\par
);\par
\par
\b Cart table\b0\par
CREATE TABLE Cart (\par
    cart_id INT AUTO_INCREMENT PRIMARY KEY,\par
    user_id INT NOT NULL,\par
    product_id INT NOT NULL,\par
    quantity INT NOT NULL,\par
    date_added TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\par
    FOREIGN KEY (user_id) REFERENCES Users(user_id),\par
    FOREIGN KEY (product_id) REFERENCES Products(product_id)\par
);\par
\par
\b Orders table\b0\par
CREATE TABLE Orders (\par
    order_id INT AUTO_INCREMENT PRIMARY KEY,\par
    user_id INT NOT NULL,\par
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\par
    total_amount DECIMAL(10, 2) NOT NULL,\par
    FOREIGN KEY (user_id) REFERENCES Users(user_id)\par
);\par
\par
\b OrderDetails table\b0\par
CREATE TABLE OrderDetails (\par
    order_detail_id INT AUTO_INCREMENT PRIMARY KEY,\par
    order_id INT NOT NULL,\par
    product_id INT NOT NULL,\par
    quantity INT NOT NULL,\par
    subtotal_amount DECIMAL(10, 2) NOT NULL,\par
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),\par
    FOREIGN KEY (product_id) REFERENCES Products(product_id)\par
);\par
\par
\b PaymentTransactions Table\b0\par
CREATE TABLE PaymentTransactions (\par
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,\par
    order_id INT NOT NULL,\par
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\par
    payment_amount DECIMAL(10, 2) NOT NULL,\par
    payment_status VARCHAR(255) NOT NULL,\par
    payment_method VARCHAR(255),\par
    FOREIGN KEY (order_id) REFERENCES Orders(order_id)\par
);\par
\par
\b security_questions table\b0\par
CREATE TABLE security_questions (\par
    question_id INT AUTO_INCREMENT PRIMARY KEY,\par
    security_question VARCHAR(255) NOT NULL\par
);\par

\pard\nowidctlpar\sa200\sl276\slmult1\par
3. \b\fs28 Full Architecture Details\par
\b0\fs22\par
3.1 \b\fs24 System Architecture:\b0\fs22\par
\b Architecture Overview\par
\b0 The Nykii e-commerce platform is designed as a web-based application that offers a user-friendly interface for customers to browse and purchase beauty and skincare products. The architecture consists of both frontend and backend components, and it relies on a combination of technologies to provide a seamless shopping experience.\par
\b Frontend Architecture\par
\b0\tab a. \b Technologies Used\par
\b0 HTML (HyperText Markup Language): HTML is the backbone of the platform, defining the structure and content of web pages.\par
CSS (Cascading Style Sheets): CSS is used to style the HTML elements, ensuring a visually appealing and consistent layout across all pages.\par
JavaScript (JS): JavaScript is employed for enhancing user interactivity and handling client-side operations.\par
Frontend Components\par
User Interface (UI): The frontend includes a responsive and intuitive UI design that enables users to navigate the website, view product listings, and interact with various features.\par
Product Listings: HTML templates dynamically generate product listings by fetching data from the backend database. Each product listing includes product images, descriptions, prices, and "Add to Cart" buttons.\par
User Authentication: The platform offers login and registration forms with client-side validation to ensure secure user authentication. Users can reset their passwords using security questions.\par
Cart Management: Users can add products to their shopping cart. The cart is displayed, showing all selected products, quantities, and a total amount. Users can proceed to payment from the cart.\par
Payment Form: A payment form collects credit card details, CVV, and OTP for processing payments. JavaScript validates the form data before submitting it to the backend for processing.\par
\b Backend Architecture\par
\b0\tab a. Technologies Used\par
PHP (Hypertext Preprocessor): PHP is the server-side scripting language responsible for handling server requests, managing databases, and processing business logic.\par
MySQL: MySQL is used as the relational database management system (RDBMS) for storing user data, product information, orders, and payments.\par
\par
\b Backend Components\par
\b0\tab a. Server: The PHP server processes incoming HTTP requests and communicates with the database server to retrieve and store data.\par
\tab b. Database: MySQL stores structured data, including user profiles, product details, shopping cart contents, order information, and payment transactions.\par
\tab c. Database Queries: PHP scripts execute SQL queries to retrieve, insert, update, or delete data from the database.\par
\tab d. Session Management: PHP sessions are used to maintain user authentication and manage shopping cart data across multiple pages.\par
\tab e. Security: Security measures, such as password hashing and validation, protect user data. Payment processing is conducted securely with encryption and validation checks.\par
\tab\par
\b Microservices\b0\par
While the Nykii e-commerce platform primarily follows a monolithic architecture, certain components can be modularized into microservices in the future. Potential microservices include:\par
\tab a. Payment Gateway Integration: Separating payment processing into a microservice allows for flexibility in choosing different payment gateways.\par
\tab b. Recommendation Engine: A recommendation microservice can provide personalized product recommendations based on user behavior and preferences.\par
\tab d. Search and Filter: Developing a microservice dedicated to product search and filtering can enhance search functionality and improve performance.\par
\par
\b\fs28 4. Unit Test Cases\b0\fs22\par

\pard\nowidctlpar\sl276\slmult1\b User Authentication and Authorization:\b0\par
\b User Registration: \b0 Verify that a new user can successfully register an account with valid details.\par
\b Login:\b0  Check if a registered user can log in with the correct email and password.\par
\b Login Validation:\b0  Test for invalid login attempts, including incorrect passwords and non-existent users.\par
\b Password Reset:\b0  Ensure that users can reset their passwords using the "Forgot Password" feature.\par
\b OTP Verification:\b0  Validate that users can verify their accounts and reset passwords using the OTP provided in the email.\par
\par
\b Product Management:\par
Product Listing:\b0  Ensure that products are correctly listed on the platform, including images, descriptions, and prices.\par
\b Add to Cart:\b0  Verify that users can add products to their shopping carts.\par
\b Cart Contents:\b0  Check if the cart displays the correct products and quantities.\par
\b Cart Total:\b0  Validate that the cart calculates the total price correctly based on selected products.\par
\par
\b Cart and Checkout:\par
Update Cart\b0 : Test the ability to update cart quantities and remove items.\par
\b Empty Cart:\b0  Ensure that users can successfully empty their shopping carts.\par
\b Proceed to Payment\b0 : Confirm that users can proceed to the payment page from the cart.\par
\par
\b Payment Processing:\b0\par
\b Payment Form Validation:\b0  Test the validation of credit card details, CVV, and OTP on the payment form.\par
\b Payment Processing:\b0  Simulate payment processing, including successful payments, declined payments, and errors.\par
\b Order Creation:\b0  Verify that orders are created after successful payment processing.\par
\par
\b Database:\b0\par
\b Database Connectivity: \b0 Ensure that the application can connect to the database and retrieve/update data.\par
\b Data Integrity:\b0  Check for data consistency, such as verifying that product details match between the cart and the product table.\par
\par
\b Security:\b0\par
\b User Data Protection:\b0  Test the security of user data, including password hashing and protection against SQL injection.\par
\b Payment Security:\b0  Ensure that payment information is securely processed and stored.\par
\par
\b Performance:\b0\par
\b Load Testing:\b0  Conduct load tests to evaluate the platform's performance under heavy user traffic.\par
\b Response Time:\b0  Measure and optimize response times for key functionalities, such as product listing and checkout.\par
\par
\b Email Notifications:\b0\par
\b Email Sending:\b0  Confirm that email notifications are sent to users for registration, password reset, and OTP verification.\par
\b Email Content:\b0  Check the content and formatting of email notifications.\par
\par
\b Error Handling:\b0\par
\b Error Messages:\b0  Verify that meaningful error messages are displayed to users for various scenarios, such as login errors and payment failures.\par
\b Error Logging:\b0  Ensure that errors are logged for debugging and monitoring purposes.\deleted\par
\par
\deleted0\par
}
 